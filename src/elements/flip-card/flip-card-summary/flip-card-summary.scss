@use '../../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-flip-card-summary-opacity: 1;
  --sbb-flip-card-summary-pointer-events: all;

  display: contents;
}

.sbb-flip-card-summary {
  display: grid;
  min-height: var(--sbb-flip-card-min-height);
  pointer-events: var(--sbb-flip-card-summary-pointer-events);
  opacity: var(--sbb-flip-card-summary-opacity);
  border-radius: var(--sbb-flip-card-border-radius);
  overflow: hidden;
  grid-template-columns: minmax(0, 1fr);
  grid-template-rows: auto minmax(0, 1fr);
  width: 100%;
  height: 100%;
  transition: all var(--sbb-flip-card-summary-transition-duration) ease-out;
  transition-delay: var(--sbb-flip-card-summary-transition-delay);

  :host([image-alignment='after']) & {
    @include sbb.mq($from: small) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
      grid-template-rows: 1fr;
    }

    @include sbb.mq($from: medium) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
      grid-template-rows: 1fr;
    }
  }
}

::slotted(sbb-title) {
  padding-inline: var(--sbb-spacing-responsive-s);
  padding-block: var(--sbb-spacing-responsive-s) var(--sbb-spacing-responsive-xs);
  margin: 0;
  grid-area: 1 / 1 / 2 / 2;

  :host([image-alignment='after']) & {
    @include sbb.mq($from: small) {
      grid-area: 1 / 1 / 2 / 3;
    }

    @include sbb.mq($from: medium) {
      grid-area: 1 / 1 / 2 / 2;
    }
  }
}

::slotted(*:not([slot='image'])) {
  transform: translateY(var(--sbb-flip-card-translate-title-y-hover, #{sbb.px-to-rem-build(0)}));
  transition: transform var(--sbb-disable-animation-duration, var(--sbb-animation-duration-2x))
    var(--sbb-animation-easing);
}

.sbb-flip-card-summary--image-wrapper {
  grid-area: 2 / 1 / 3 / 2;

  :host([image-alignment='after']) & {
    @include sbb.mq($from: small) {
      grid-area: 1 / 3 / 2 / 4;
    }

    @include sbb.mq($from: medium) {
      grid-area: 1 / 2 / 2 / 3;
    }
  }
}

::slotted([slot='image']) {
  width: 100%;
  height: 100%;
}
