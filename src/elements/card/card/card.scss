@use '../../core/styles' as sbb;

// # Stacking of action
// To support content with actions that should be accessible, we have to stack the action and content like following:
// The content is basically on top of the action, but is made pointer transparent with `pointer-events: none`.
// All focusable elements inside the main slot will receive `pointer-events: all` which makes them pointer accessible.

:host {
  display: block;

  @include sbb.card-variables;
}

:host([color='milk']) {
  @include sbb.card-variables--milk;
}

:host([color='transparent-bordered']) {
  @include sbb.card-variables--transparent-bordered;
}

:host([color='transparent-bordered-dashed']) {
  @include sbb.card-variables--transparent-bordered-dashed;
}

:host([data-has-active-action]) {
  @include sbb.card-variables--active;
}

:host([size='xs']) {
  @include sbb.card-variables--xs;
}

:host([size='s']) {
  @include sbb.card-variables--s;
}

:host([size='m']) {
  @include sbb.card-variables--m;
}

:host([size='m'][data-has-card-badge]) {
  @include sbb.card-variables--m-has-badge;
}

:host([size='l']) {
  @include sbb.card-variables--l;
}

:host([size='l'][data-has-card-badge]) {
  @include sbb.card-variables--l-has-badge;
}

:host([size='xl']) {
  @include sbb.card-variables--xl;
}

:host([size='xl'][data-has-card-badge]) {
  @include sbb.card-variables--xl-has-badge;
}

:host([size='xxl']) {
  @include sbb.card-variables--xxl;
}

:host([size='xxxl']) {
  @include sbb.card-variables--xxxl;
}

:host([data-has-action]) {
  @include sbb.if-forced-colors {
    --sbb-title-text-color-normal-override: var(--sbb-card-color);
  }
}

:host([data-has-action]:not([data-has-active-action]):hover) {
  @include sbb.card--hover('.sbb-card');
}

:host([data-has-action][data-action-role='button']) {
  @include sbb.card-variables--button;
}

:host([data-has-action][data-action-role='link']) {
  @include sbb.card-variables--link;
}

.sbb-card {
  width: 100%;
  height: 100%;

  @include sbb.card;
}

.sbb-card__wrapper {
  @include sbb.card--wrapper;

  :host([data-has-action]) & {
    pointer-events: none;
    transform: translateY(var(--sbb-card-hover-shift));
    transition: transform var(--sbb-card-animation-duration) var(--sbb-card-animation-easing);
  }
}

.sbb-card__badge-wrapper {
  overflow: hidden;
  position: absolute;
  inset: 0;
  inset-block-end: unset;
  border-start-start-radius: var(--sbb-card-border-radius);
  border-start-end-radius: var(--sbb-card-border-radius);

  :host([data-has-action]) & {
    pointer-events: none;
  }

  :host(:not([data-has-card-badge])) & {
    display: none;
  }
}

// We remove upper margin from all titles
// as we do not expect multiple titles to be used inside a card.
::slotted(sbb-title) {
  margin-block-start: 0;
}
