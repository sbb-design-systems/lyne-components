@use '../../core/styles' as sbb;

$disabled: ':disabled, [disabled-interactive]';
$active: ':active, [data-active]';

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  display: inline-block;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize CSS of several frameworks.
  outline: none !important;

  --sbb-popover-color: inherit;

  @include sbb.if-forced-colors {
    --sbb-popover-color: ButtonText !important;
  }
}

@include sbb.hover-mq($hover: true) {
  :host(:hover) {
    --sbb-popover-color: var(--sbb-color-iron);
  }

  :host(:hover[negative]) {
    --sbb-popover-color: var(--sbb-color-cloud);
  }
}

:host([negative]) {
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
}

:host(:is(#{$active})) {
  --sbb-popover-color: var(--sbb-color-anthracite);
}

:host(:is(#{$active})[negative]) {
  --sbb-popover-color: var(--sbb-color-cement);
}

:host(:is(#{$disabled})) {
  pointer-events: none;

  --sbb-popover-color: var(--sbb-color-graphite);

  @include sbb.if-forced-colors {
    --sbb-popover-color: GrayText !important;
  }
}

:host(:is(#{$disabled})[negative]) {
  --sbb-popover-color: var(--sbb-color-smoke);
}

@include sbb.icon-button-base(':host([data-icon-small])', '.sbb-popover-trigger', 'sbb-icon');

:host([data-icon-small][negative]) {
  @include sbb.icon-button-variables-negative;
}

:host([data-icon-small]:is(#{$disabled})) {
  @include sbb.icon-button-disabled('.sbb-popover-trigger');
}

:host([data-icon-small]:focus-visible) {
  @include sbb.icon-button-focus-visible('.sbb-popover-trigger');
}

:host([data-icon-small]:not(#{$disabled}, #{active}):hover) {
  @include sbb.icon-button-hover('.sbb-popover-trigger');
}

:host([data-icon-small]:is(#{active})) {
  @include sbb.icon-button-active('.sbb-popover-trigger');
}

.sbb-popover-trigger {
  :host(:not([data-icon-small])) & {
    @include sbb.text-inherit;

    display: flex;
    cursor: pointer;
    color: var(--sbb-popover-color);
  }

  :host(:focus-visible:not([data-icon-small])) & {
    @include sbb.focus-outline;

    border-radius: var(--sbb-border-radius-4x);
  }
}

sbb-icon {
  min-width: var(--sbb-size-icon-ui-small);
  min-height: var(--sbb-size-icon-ui-small);
}
