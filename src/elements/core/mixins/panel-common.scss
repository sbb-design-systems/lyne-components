@use '../styles' as sbb;

:host {
  --sbb-selection-panel-background: var(
    --sbb-selection-panel-inner-background,
    var(--sbb-background-color-1)
  );
  --sbb-selection-panel-border-color: var(--sbb-border-color-4-inverted);

  // We use --sbb-selection-expansion-panel-border-radius in case a user would define another border radius.
  // The default is the same as here.
  --sbb-selection-panel-border-radius: var(
    --sbb-selection-expansion-panel-border-radius,
    var(--sbb-border-radius-4x)
  );
  --sbb-selection-panel-border-width: var(
    --sbb-selection-panel-inner-border-width,
    var(--sbb-border-width-1x)
  );
  --sbb-selection-panel-input-padding: var(--sbb-spacing-responsive-xs)
    var(--sbb-spacing-responsive-xxs);
  --sbb-selection-panel-animation-duration: var(
    --sbb-disable-animation-duration,
    var(--sbb-animation-duration-4x)
  );
  --sbb-selection-panel-cursor: pointer;
  --sbb-selection-panel-suffix-color: var(--sbb-color-3);
  --sbb-selection-panel-subtext-color: light-dark(var(--sbb-color-granite), var(--sbb-color-smoke));

  display: block;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize CSS of several frameworks.
  outline: none !important;
}

:host([size='s']) {
  --sbb-selection-panel-input-padding: var(--sbb-spacing-responsive-xxs)
    var(--sbb-spacing-responsive-xxxs);
}

:host([color='milk']) {
  --sbb-selection-panel-background: var(
    --sbb-selection-panel-inner-background,
    var(--sbb-background-color-3)
  );
}

:host([borderless]:not([data-checked])) {
  --sbb-selection-panel-border-color: transparent;
}

:host(:is([data-checked]):not(:disabled, [disabled])) {
  --sbb-selection-panel-border-color: var(--sbb-border-color-3);
  --sbb-selection-panel-border-width: var(
    --sbb-selection-panel-inner-border-width,
    var(--sbb-border-width-2x)
  );
}

:host(:is(:disabled, [disabled])) {
  --sbb-selection-panel-cursor: default;
}

.sbb-selection-panel {
  display: block;
  cursor: var(--sbb-selection-panel-cursor);
  position: relative;
  border-radius: var(--sbb-selection-panel-border-radius);
  box-shadow: inset 0 0 0 var(--sbb-selection-panel-border-width)
    var(--sbb-selection-panel-border-color);
  padding: var(--sbb-selection-panel-input-padding);
  background-color: var(--sbb-selection-panel-background);

  transition: {
    duration: var(--sbb-selection-panel-animation-duration);
    timing-function: var(--sbb-animation-easing);
    property: box-shadow;
  }

  // For high contrast mode we need a real border
  @include sbb.if-forced-colors {
    &::after {
      content: '';
      display: block;
      position: absolute;
      inset: 0;
      pointer-events: none;
      border: var(--sbb-selection-panel-border-width) solid var(--sbb-selection-panel-border-color);
      border-radius: var(--sbb-selection-panel-border-radius);
    }
  }

  :host(:focus-visible) & {
    @include sbb.focus-outline;
  }
}

.sbb-selection-panel__badge {
  user-select: none;
  pointer-events: none;
  position: absolute;
  inset: 0;
  border-radius: var(--sbb-selection-panel-border-radius);
  overflow: hidden;
}

slot[name='suffix'] {
  color: var(--sbb-selection-panel-suffix-color);
}

slot[name='subtext'] {
  display: block;
  color: var(--sbb-selection-panel-subtext-color);
  padding-inline-start: var(--sbb-spacing-fixed-8x);

  :host(:not(:state(slotted-subtext))) & {
    display: none;
  }
}
