@use './typo';
@use './a11y';
@use '../core/mediaqueries';
@use '../core/functions';

@mixin link-common-variables {
  --sbb-link-color-hover: var(--sbb-color-red125);
  --sbb-link-color-active: var(--sbb-color-red150);
  --sbb-link-text-decoration-color: color-mix(in srgb, currentcolor 80%, white);
  --sbb-link-text-decoration-color-hover: currentcolor;
}

@mixin link-common-variables--negative {
  --sbb-focus-outline-color: var(--sbb-focus-outline-color-dark);
  --sbb-link-text-decoration-color: color-mix(in srgb, currentcolor 80%, black);
  --sbb-link-text-decoration-color-hover: currentcolor;
}

@mixin block-link-variables {
  @include link-common-variables;

  --sbb-link-color-normal: var(--sbb-color-granite);
}

@mixin block-link-variables--negative {
  @include link-common-variables--negative;

  --sbb-link-color-normal: var(--sbb-color-white);
  --sbb-link-color-hover: var(--sbb-color-cloud);
  --sbb-link-color-active: var(--sbb-color-silver);
}

// To display a current active page, e.g. if the CSS class sbb-active is set
@mixin block-link-variables--active {
  --sbb-link-color-normal: var(--sbb-color-black);
  --sbb-link-text-decoration: underline;
  --sbb-link-text-decoration-color: currentcolor;
}

// To display a current active page, e.g. if the CSS class sbb-active is set
@mixin block-link-variables--active-negative {
  --sbb-link-color-normal: var(--sbb-color-cement);
  --sbb-link-text-decoration: underline;
  --sbb-link-text-decoration-color: currentcolor;
}

@mixin link-variables {
  @include link-common-variables;

  --sbb-link-color-normal: inherit;
}

@mixin link-variables--negative {
  @include link-common-variables--negative;

  --sbb-link-color-hover: var(--sbb-color-graphite);
  --sbb-link-color-active: var(--sbb-color-metal);
}

@mixin link-variables--button {
  @include a11y.if-forced-colors {
    --sbb-link-color-normal: ButtonText;
    --sbb-link-color-hover: ButtonText;
    --sbb-link-color-active: ButtonText;
  }
}

@mixin link-base {
  color: var(--sbb-link-color-normal);

  // TODO: rename --sbb-link-text-decoration variable to --sbb-link-text-decoration-line
  text-decoration-line: var(--sbb-link-text-decoration, underline);
  text-decoration-color: var(--sbb-link-text-decoration-color);
  text-decoration-thickness: #{functions.px-to-rem-build(1)};
  text-underline-offset: 0.3125em; // 5px
  user-select: none;

  @include a11y.if-forced-colors {
    text-decoration: underline;
  }
}

@mixin link-focus-visible {
  // Hide focus outline when focus origin is mouse or touch. This is being used as a workaround in various components.
  &:focus-visible:not([data-focus-origin='mouse'], [data-focus-origin='touch']) {
    @include a11y.focus-outline;

    border-radius: calc(var(--sbb-border-radius-4x) - var(--sbb-focus-outline-offset));
  }
}

@mixin link-hover-rules {
  @include mediaqueries.hover-mq($hover: true) {
    color: var(--sbb-link-color-hover);

    // TODO: rename --sbb-link-hover-text-decoration variable to --sbb-link-text-decoration-line-hover
    text-decoration-line: var(--sbb-link-hover-text-decoration, underline);
    text-decoration-color: var(--sbb-link-text-decoration-color-hover);
  }
}

@mixin link-hover {
  &:hover {
    @include link-hover-rules;
  }
}

@mixin link-active-rules {
  color: var(--sbb-link-color-active);
}

@mixin link-active {
  &:active {
    @include link-active-rules;
  }
}

@mixin link-consolidation {
  @include typo.text-inherit;
  @include link-base;

  & {
    @include link-focus-visible;
    @include link-hover;

    // Active definitions have to be after :hover definitions
    @include link-active;
  }
}

@mixin link {
  @include link-variables;
  @include link-consolidation;
}

@mixin link-negative {
  @include link-variables;
  @include link-variables--negative;
  @include link-consolidation;
}
