@use './mixins/table';

.sbb-table,
.sbb-table-m,
.sbb-table-s,
.sbb-table-xs {
  @include table.table;
}

.sbb-table-m {
  @include table.table--m;
}

.sbb-table-s {
  @include table.table--s;
}

.sbb-table-xs {
  @include table.table--xs;
}

sbb-table-wrapper[negative] .sbb-table,
.sbb-table--negative {
  @include table.table--negative;
}

.sbb-table--striped {
  @include table.table--striped;
}

.sbb-table--unstriped {
  @include table.table--unstriped;
}

.sbb-table--theme-iron {
  @include table.table--theme-iron;

  &.sbb-table--negative {
    @include table.table--theme-iron-negative;
  }
}

.sbb-table-header-row {
  @include table.table-header-row;
}

.sbb-table-header-cell {
  @include table.table-header-cell;
}

.sbb-table-data-row {
  @include table.table-data-row;
}

.sbb-table-row--striped {
  @include table.table-row--striped;
}

.sbb-table-data-cell {
  @include table.table-data-cell;
}

.sbb-table-caption {
  @include table.table-caption;
}

.sbb-table-filter {
  @include table.table-filter;
}

.sbb-table-sticky {
  // Note that the table can either set this class or an inline style to make something sticky.
  // We set the style as `!important` so that we get an identical specificity in both cases
  // and to avoid cases where user styles have a higher specificity.
  position: sticky !important;
}

// TODO: In future, move to the 'sbb-lean' theme
html.sbb-lean .sbb-table:not(.sbb-table-xs, .sbb-table-m) {
  @include table.table--s;
}
