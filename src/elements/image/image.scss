@use '../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-image-aspect-ratio: 16 / 9;
  --sbb-image-animation-duration: var(
    --sbb-disable-animation-duration,
    var(--sbb-animation-duration-4x)
  );
  --sbb-image-object-fit: cover;

  display: block;
  border-radius: var(--sbb-border-radius-4x);
}

.sbb-image__img {
  opacity: 0.000001;

  :host([data-loaded]) & {
    opacity: 0.999999;
  }

  :host(:not([skip-lqip])) & {
    position: absolute;
    inset: 0;
  }
}

.sbb-image__blurred {
  :host([data-loaded]) & {
    opacity: 0;
  }
}

// Avoids unwanted space or small cropping
picture {
  display: contents;
}

// After successful loading an image, the loaded image is faded in over the blurred lqip image with a short transition.
// To support transparent images, we need also to fade out the blurred lqip image.
// This is not perfect in the case of a non transparent image, but does not look that bad.
:is(.sbb-image__img, .sbb-image__blurred) {
  width: 100%;
  height: 100%;
  object-fit: var(--sbb-image-object-fit);
  object-position: var(--sbb-image-object-position);
  transition: opacity var(--sbb-image-animation-duration) var(--sbb-animation-easing);
}

.sbb-image__wrapper {
  display: flex;
  position: relative;
  width: 100%;
  height: 100%;
  aspect-ratio: var(--sbb-image-aspect-ratio);
  border-radius: inherit;
  overflow: hidden;
}
