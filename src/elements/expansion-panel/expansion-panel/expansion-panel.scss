@use '../../core/styles' as sbb;

// Open/Close animation vars
$open-anim-rows-from: 0fr;
$open-anim-rows-to: 1fr;
$open-anim-opacity-from: 0;
$open-anim-opacity-to: 1;

:host {
  --sbb-expansion-panel-animation-duration: var(
    --sbb-disable-animation-duration,
    var(--sbb-animation-duration-4x)
  );
  --sbb-expansion-panel-background-color: var(--sbb-background-color-1);
  --sbb-expansion-panel-content-visibility: hidden;
  --sbb-expansion-panel-border-width: var(--sbb-border-width-1x);
  --sbb-expansion-panel-border-color: var(--sbb-border-color-4-inverted);
  --sbb-expansion-panel-border-block-start-width: var(--sbb-expansion-panel-border-width);
  --sbb-expansion-panel-border-block-start-color: var(--sbb-expansion-panel-border-color);
  --sbb-expansion-panel-border-radius: var(--sbb-border-radius-4x);
  --sbb-expansion-panel-start-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-start-start-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-start-radius: var(--sbb-expansion-panel-border-radius);

  // Vars which will be used by child components
  --sbb-expansion-panel-title-gap: var(--sbb-spacing-fixed-4x);
  --sbb-expansion-panel-icon-size: var(--sbb-size-icon-ui-medium);

  display: block;
}

:host([size='s']) {
  --sbb-expansion-panel-title-gap: var(--sbb-spacing-fixed-2x);
}

:host([disabled]) {
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-color: GrayText;
    --sbb-expansion-panel-border-block-start-color: GrayText;
  }
}

:host([expanded]) {
  --sbb-expansion-panel-content-visibility: visible;
}

:host([data-accordion][data-accordion-first]) {
  --sbb-expansion-panel-start-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-start-start-radius: var(--sbb-expansion-panel-border-radius);
}

:host([data-accordion]:not([data-accordion-first])) {
  --sbb-expansion-panel-border-block-start-width: 0;
  --sbb-expansion-panel-border-block-start-color: transparent;
  --sbb-expansion-panel-start-end-radius: 0;
  --sbb-expansion-panel-start-start-radius: 0;
}

:host([data-accordion][data-accordion-last]) {
  --sbb-expansion-panel-end-end-radius: var(--sbb-expansion-panel-border-radius);
  --sbb-expansion-panel-end-start-radius: var(--sbb-expansion-panel-border-radius);
}

:host([data-accordion]:not([data-accordion-last])) {
  --sbb-expansion-panel-end-end-radius: 0;
  --sbb-expansion-panel-end-start-radius: 0;
}

:host([color='milk']) {
  --sbb-expansion-panel-background-color: var(--sbb-background-color-3);
}

:host([borderless]) {
  --sbb-expansion-panel-border-width: 0;
  --sbb-expansion-panel-border-color: transparent;
  --sbb-expansion-panel-border-block-start-width: 0;
  --sbb-expansion-panel-border-block-start-color: transparent;
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-width: var(--sbb-border-width-1x);
    --sbb-expansion-panel-border-block-start-width: var(--sbb-expansion-panel-border-width);
  }
}

:host([borderless][data-accordion]:not([data-accordion-first])) {
  --sbb-expansion-panel-border-block-start-width: var(--sbb-spacing-fixed-1x);
  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-block-start-width: 0;
  }
}

:host(:not([disabled])[data-toggle-hover]) {
  --sbb-expansion-panel-background-color: var(--sbb-background-color-3);

  @include sbb.if-forced-colors {
    --sbb-expansion-panel-border-color: Highlight;
    --sbb-expansion-panel-border-block-start-color: Highlight;
  }
}

:host(:not([disabled])[color='milk'][data-toggle-hover]) {
  --sbb-expansion-panel-background-color: var(--sbb-background-color-1);
}

.sbb-expansion-panel {
  background-color: var(--sbb-expansion-panel-background-color);
  border: var(--sbb-expansion-panel-border-width) solid var(--sbb-expansion-panel-border-color);
  border-block-start-color: var(--sbb-expansion-panel-border-block-start-color);
  border-block-start-width: var(--sbb-expansion-panel-border-block-start-width);
  border-radius: var(--sbb-expansion-panel-start-start-radius)
    var(--sbb-expansion-panel-start-end-radius) var(--sbb-expansion-panel-end-end-radius)
    var(--sbb-expansion-panel-end-start-radius);
  background-clip: padding-box;
}

.sbb-expansion-panel__header {
  margin: 0;
}

.sbb-expansion-panel__content-wrapper {
  display: grid;
  visibility: var(--sbb-expansion-panel-content-visibility);
  grid-template-rows: #{$open-anim-rows-from};
  opacity: #{$open-anim-opacity-from};

  :host([data-state='opened']) & {
    grid-template-rows: #{$open-anim-rows-to};
    opacity: #{$open-anim-opacity-to};
  }

  :host([data-state='opening']) & {
    animation-name: open, open-opacity;
    animation-fill-mode: forwards;
    animation-duration: var(--sbb-expansion-panel-animation-duration);
    animation-timing-function: var(--sbb-animation-easing);
    animation-delay: 0s, var(--sbb-expansion-panel-animation-duration);
  }

  :host([data-state='closing']) & {
    animation-name: close;
    animation-duration: var(--sbb-expansion-panel-animation-duration);
    animation-timing-function: var(--sbb-animation-easing);
  }
}

.sbb-expansion-panel__content {
  overflow: hidden;
}

@keyframes open {
  from {
    grid-template-rows: #{$open-anim-rows-from};
  }

  to {
    grid-template-rows: #{$open-anim-rows-to};
  }
}

@keyframes open-opacity {
  from {
    opacity: #{$open-anim-opacity-from};
  }

  to {
    opacity: #{$open-anim-opacity-to};
  }
}

@keyframes close {
  from {
    grid-template-rows: #{$open-anim-rows-to};
    opacity: #{$open-anim-opacity-to};
  }

  to {
    grid-template-rows: #{$open-anim-rows-from};
    opacity: #{$open-anim-opacity-from};
  }
}
