@use '../../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-toggle-option-cursor: pointer;
  --sbb-toggle-option-color: var(--sbb-color-anthracite);
  --sbb-toggle-option-icon-min-size: var(--sbb-size-icon-ui-small);
  --sbb-toggle-option-border-radius: var(--sbb-border-radius-infinity);
  --sbb-toggle-option-line-height: calc(1em * var(--sbb-typo-line-height-body-text));

  display: inline-block;
  min-width: var(--sbb-toggle-min-width);
  overflow: hidden;
  z-index: 1;

  // Use !important here to not interfere with Firefox focus ring definition
  // which appears in normalize CSS of several frameworks.
  outline: none !important;
}

:host([checked]) {
  --sbb-toggle-option-color: var(--sbb-color-charcoal);
}

:host([disabled]) {
  --sbb-toggle-option-cursor: unset;
  --sbb-toggle-option-color: var(--sbb-color-granite);
}

input[type='radio'] {
  @include sbb.screen-reader-only;
}

.sbb-toggle-option {
  @include sbb.text-xs--bold;

  cursor: var(--sbb-toggle-option-cursor);
  display: flex;
  justify-content: center;
  align-items: center;
  height: var(--sbb-toggle-height);
  padding-inline: var(--sbb-toggle-padding-inline);
  border-radius: var(--sbb-toggle-option-border-radius);
  color: var(--sbb-toggle-option-color);

  // if ![icon-only]
  :host([data-slot-names~='unnamed']:where([data-slot-names~='icon'], [icon-name])) & {
    gap: var(--sbb-spacing-fixed-1x);
  }
}

.sbb-toggle-option__label {
  @include sbb.ellipsis;

  // We need to use a ::before pseudo-element to show a single outline wrapping
  // the entire toggle when a toggle option receives :focus-visible.
  :host(:focus-visible) & {
    &::before {
      @include sbb.focus-outline;

      content: '';
      position: absolute;
      pointer-events: none;

      // The white pill is bigger than the option. We add the diff as inset.
      inset: calc(-2 * var(--sbb-toggle-border-width));
      border-radius: var(--sbb-toggle-option-border-radius);
    }
  }
}

sbb-icon,
::slotted(sbb-icon) {
  min-width: var(--sbb-toggle-option-icon-min-size);
  min-height: var(--sbb-toggle-option-icon-min-size);
}
