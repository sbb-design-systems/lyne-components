@use '../core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  display: block;

  --sbb-visual-checkbox-dimension: var(--sbb-size-icon-ui-small);
  --sbb-visual-checkbox-background-color: var(--sbb-background-color-1);
  --sbb-visual-checkbox-border-color: var(--sbb-border-color-5);
  --sbb-visual-checkbox-border-style: solid;
  --sbb-visual-checkbox-border-width: var(--sbb-border-width-1x);
  --sbb-visual-checkbox-selection-color: var(--sbb-color-primary);
  --sbb-visual-checkbox-cursor: pointer;

  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: Canvas;
    --sbb-visual-checkbox-border-width: 0;
  }
}

:host([size='xs']) {
  --sbb-visual-checkbox-dimension: #{sbb.px-to-rem-build(20)};
}

:host([negative]) {
  --sbb-visual-checkbox-background-color: var(--sbb-background-color-1-negative);
  --sbb-visual-checkbox-border-color: var(--sbb-border-color-5);
  --sbb-visual-checkbox-selection-color: var(--sbb-color-primary-85);

  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: Canvas;
  }
}

:host([disabled]) {
  --sbb-visual-checkbox-background-color: var(--sbb-background-color-3);
  --sbb-visual-checkbox-border-color: var(--sbb-border-color-5);
  --sbb-visual-checkbox-border-style: dashed;
  --sbb-visual-checkbox-selection-color: var(--sbb-color-2);
  --sbb-visual-checkbox-cursor: default;

  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: Canvas;
  }
}

:host([disabled][negative]) {
  --sbb-visual-checkbox-background-color: var(--sbb-background-color-3-negative);
  --sbb-visual-checkbox-border-color: var(--sbb-border-color-5);
  --sbb-visual-checkbox-selection-color: var(--sbb-color-2-negative);

  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: Canvas;
  }
}

:host([indeterminate]) {
  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: ButtonBorder;
  }
}

:host([indeterminate][disabled]) {
  @include sbb.if-forced-colors {
    --sbb-visual-checkbox-selection-color: GrayText;
  }
}

.sbb-visual-checkbox {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--sbb-visual-checkbox-dimension);
  height: var(--sbb-visual-checkbox-dimension);
  border-radius: var(--sbb-border-radius-2x);
  border: var(--sbb-visual-checkbox-border-width) var(--sbb-visual-checkbox-border-style)
    var(--sbb-visual-checkbox-border-color);
  background-color: var(--sbb-visual-checkbox-background-color);
  cursor: var(--sbb-visual-checkbox-cursor);

  @include sbb.if-forced-colors {
    outline: var(--sbb-border-width-2x) solid ButtonBorder;
    outline-offset: calc(-1 * var(--sbb-border-width-2x));

    :host([checked]:not([indeterminate])) & {
      background-color: HighLight;
      outline: none;
    }

    :host([disabled]) & {
      outline-color: GrayText;
    }

    :host([checked][disabled]:not([indeterminate])) & {
      background-color: GrayText;
    }
  }
}

.sbb-visual-checkbox__icon {
  display: inline-flex;
  width: var(--sbb-visual-checkbox-dimension);
  height: var(--sbb-visual-checkbox-dimension);

  svg {
    margin: auto;
  }

  path {
    stroke: var(--sbb-visual-checkbox-selection-color);
  }
}
