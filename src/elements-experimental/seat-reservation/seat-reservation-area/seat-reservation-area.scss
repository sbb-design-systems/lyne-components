@use '@sbb-esta/lyne-elements/core/styles' as sbb;

// Box-sizing rules contained in typography are not traversing Shadow DOM boundaries. We need to include box-sizing mixin in every component.
@include sbb.box-sizing;

:host {
  --sbb-reservation-area-width: 1;
  --sbb-reservation-area-height: 1;
  --sbb-reservation-area-rotation: 0;
  --sbb-reservation-area-border-radius: var(--sbb-border-width-4x);

  display: inline-block;
  position: inherit;
}

.sbb-sr-area {
  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(var(--sbb-reservation-area-width) * #{sbb.px-to-rem-build(1)});
  height: calc(var(--sbb-reservation-area-height) * #{sbb.px-to-rem-build(1)});
  rotate: calc(var(--sbb-reservation-area-rotation) * 1deg);
  border: var(--sbb-border-width-1x) solid var(--sbb-color-graphite);
  background-color: var(--sbb-color-white);
  border-radius: var(--sbb-reservation-area-border-radius);

  :host([background='DARK']) & {
    background-color: var(--sbb-color-milk);
  }

  :host([mounting='UPPER_BORDER']) & {
    border-block-start-width: var(--sbb-border-width-2x);
    border-radius: 0 0 var(--sbb-reservation-area-border-radius)
      var(--sbb-reservation-area-border-radius);
  }

  :host([mounting='LOWER_BORDER']) & {
    border-block-end-width: var(--sbb-border-width-2x);
    border-radius: var(--sbb-reservation-area-border-radius)
      var(--sbb-reservation-area-border-radius) 0 0;
  }

  :host([mounting='UPPER_TO_LOWER_BORDER']) & {
    border-block-start: none;
    border-block-end: none;
    border-radius: 0;
  }
}
