name: Build
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: read-all

jobs:
  remove-label:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: "Add 'preview-available' label"
        # This label is used for filtering deployments in ArgoCD.
        # At the start of the workflow, we remove the container available labels
        # which will be re-added after the Secure workflow.
        run: gh issue edit ${{ github.event.number }} --remove-label "preview-available"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - name: Run linting
        run: yarn lint

  integrity:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - name: 'Integrity: Verify workspace integrity'
        run: yarn integrity
      - name: 'Integrity: Assert no changes (run `yarn integrity` if this fails)'
        run: git diff --exit-code

  build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
      - run: yarn install --frozen-lockfile --non-interactive

      - name: Run build
        run: yarn build
        env:
          STORYBOOK_COMPONENTS_VERSION: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Store storybook artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: dist/storybook/
          retention-days: 1

      - uses: ./.github/actions/setup-mint
        if: github.ref == 'refs/heads/main'
      - name: 'Container: Build and publish dev image'
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build --tag ${{ vars.IMAGE_REPO_STORYBOOK }}:dev-fat .
          mint slim \
            --target ${{ vars.IMAGE_REPO_STORYBOOK }}:dev-fat \
            --tag ${{ vars.IMAGE_REPO_STORYBOOK }}:dev \
            --preserve-path /usr/share/nginx/html \
            --include-new false
          docker push ${{ vars.IMAGE_REPO_STORYBOOK }}:dev
          docker image list
        env:
          DOCKER_BUILDKIT: 1
